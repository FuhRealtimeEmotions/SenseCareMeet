apiVersion: apps/v1
kind: Deployment
metadata:
  name: coturn
  labels:
    app: coturn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coturn
  template:
    metadata:
      labels:
        app: coturn
    spec:
      hostNetwork: true #evtl
      containers:
      - name: coturn
        image: instrumentisto/coturn:latest
        securityContext:
          privileged: true
          runAsUser: 0
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        args:
        - -v
        - --external-ip="$(detect-external-ip)/$(MY_POD_IP)"
        - --realm="$(detect-external-ip)"
        ports:
        - containerPort: 8093
        - containerPort: 3478
        - containerPort: 3478
          protocol: UDP
        - containerPort: 3479
        - containerPort: 3479
          protocol: UDP
        - containerPort: 80 # evtl wieder raus
        - containerPort: 80 # evtl wieder raus
          protocol: UDP
        - containerPort: 443 # evtl wieder raus
        - containerPort: 443 # evtl wieder raus
          protocol: UDP
        - containerPort: 5349
        - containerPort: 5349
          protocol: UDP
        - containerPort: 5350
        - containerPort: 5350
          protocol: UDP
        - containerPort: 49160
          protocol: UDP
        volumeMounts:
          - name: cm-coturn
            mountPath: /etc/turnserver.conf

      volumes:
      - name: cm-coturn
        configMap:
          name: turnserver.conf
          items:
          - key: turnserver.conf
            path: turnserver.conf
          - key: cert.pem
            path: cert.pem
          - key: key.pem
            path: key.pem
---
apiVersion: v1
kind: Service
metadata:
  name: svc-coturn
  labels:
    app: coturn
spec:
  ports:
  - port: 3478
    targetPort: 3478
    name: turn1    
    protocol: UDP
  - port: 3478
    name: turn2
    targetPort: 3478
    protocol: TCP
  selector:
    app: coturn